<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/rabbit
                           http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
                           ">

    <description>rabbitmq 连接服务配置</description>

    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}"
                               password="${mq.password}" port="${mq.port}"/>



    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"></bean>

    <!-- spring template声明（作为一个代理-》也就是代理模式中的代理）-->
    <rabbit:template exchange="my-mq-exchange" id="amqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>

    <!-- 设置rabbit的管理 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- queue 队列声明-->
    <rabbit:queue id="queue_1" durable="true" auto-delete="false" exclusive="false" name="queue_1"/>
    <rabbit:queue id="queue_2" durable="true" auto-delete="false" exclusive="false" name="queue_2"/>
    <rabbit:queue id="queue_3" durable="true" auto-delete="false" exclusive="false" name="queue_3"/>


    <!-- 将队列绑定到交换路由同时与key绑定 -->
    <!--<rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange" >
        <rabbit:bindings>
            <rabbit:binding queue="queue_one" key="queue_1_key"/>
            <rabbit:binding queue="queue_two" key="queue_2_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>-->

    <rabbit:fanout-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange" >
        <rabbit:bindings>
            <rabbit:binding queue="queue_1"/>
            <rabbit:binding queue="queue_2"/>
            <rabbit:binding queue="queue_3"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <bean id="queueListenter" class="com.xxx.rabbitmq.sample.consumer.QueueListenter" />
    <!-- 消费者监听队列动态信息 -->
    <rabbit:listener-container connection-factory="connectionFactory" message-converter="jsonMessageConverter" acknowledge="none">
        <rabbit:listener ref="queueListenter" queue-names="queue_3" />
    </rabbit:listener-container>

</beans>